---
import NavLink from './NavLinks.astro';
import Link from './Link.astro';
import NewLink from './NewLink.astro';
import NavButton from "./NavButton.vue";
const links = [
    {
        to: "/",
        label: "Blog",
    },
    {
        to: "/",
        label: "VÃ­deos",
    },
    {
        to: "/",
        label: "Productos",
    },
];
---

<script>
    let isToggled = false;
    const $ = (query:string) => document.querySelector(query);
    const navlinks = $("#navlinks") as HTMLElement;
    const hamburger = $("#hamburger") as HTMLElement;
    const layer = $("#navLayer");
    const containerNav = $("#container-nav");
    const links = document.querySelectorAll('a');
    console.log(links)
    function toggleNavlinks(isHamburger:boolean) {
        if(!navlinks || !hamburger || !layer || !containerNav) return;
        if (isToggled) {
            navlinks.classList.add("!visible", "!scale-100", "!opacity-100", "!lg:translate-y-0");
            hamburger.classList.add("toggled");
            layer.classList.add("origin-top", "scale-y-100");
            containerNav.classList.remove('absolute');
            containerNav.classList.add('fixed');
        } else {
            setTimeout(()=>{
                navlinks.classList.remove("!visible", "!scale-100", "!opacity-100", "!lg:translate-y-0");
                hamburger.classList.remove("toggled");
                layer.classList.remove("origin-top", "scale-y-100");
                containerNav.classList.remove('fixed');
                containerNav.classList.add('absolute');
            }, isHamburger ? 0 : 350);
        }
    }
    hamburger.addEventListener("click", () => {
        isToggled = !isToggled;
        toggleNavlinks(true);
    });


    links.forEach((link) => {
        link.addEventListener("click", () => {
            isToggled = false;
            toggleNavlinks(false);
        });
    });
    

</script>

<header transition:persist>
    <nav id="container-nav" class="absolute z-30 w-full border-b border-black/5 dark:border-white/5 ">
        <div class="max-w-7xl mx-auto px-6 md:px-12 xl:px-6">
            <div class="relative flex flex-wrap items-center justify-between gap-6 py-3 md:py-4">
                <div class="relative z-20 flex w-full justify-between md:px-0 lg:w-max">
                    <a href="/" id="home" aria-label="logo" class="flex items-center space-x-2">
                        <div aria-hidden="true" class="flex space-x-1">
                            <div class="h-4 w-4 rounded-full bg-gray-900 dark:bg-white"></div>
                            <div class="h-6 w-2 bg-primary"></div>
                        </div>
                        <span class="text-2xl font-bold text-gray-900 dark:text-white">Adevsays</span>
                    </a>

                    <div class="relative flex max-h-10 items-center lg:hidden ">
                        <button aria-label="humburger" id="hamburger" class="relative -mr-6 p-6">
                            <div aria-hidden="true" id="line" class="m-auto h-0.5 w-5 rounded bg-sky-900 transition duration-300 dark:bg-gray-300"></div>
                            <div aria-hidden="true" id="line2" class="m-auto mt-2 h-0.5 w-5 rounded bg-sky-900 transition duration-300 dark:bg-gray-300"></div>
                        </button>
                    </div>
                </div>
                <div id="navLayer" aria-hidden="true" class="fixed  inset-0 z-10 h-screen w-screen origin-bottom scale-y-0 bg-white/70 backdrop-blur-2xl transition duration-500 dark:bg-gray-900/70 lg:hidden"></div>
                <NavLink>
                        <ul id="ulNavLinks" class="flex flex-col gap-6 tracking-wide lg:flex-row lg:gap-0 lg:text-sm p-0 lg:mb-0 mb-8 lg:absolute lg:left-0">
                            {
                                links.map((link) => (
                                    <li>
                                        <Link link={link.to} label={link.label}/>
                                    </li>
                                ))
                            }
                            <li>
                              <NewLink link="proyectos/vidown" label="ViDown"/>
                            </li>
                        </ul>
                    <div class="lg:absolute lg:top-[5px] lg:right-[10px]">
                        <NavButton link="/asesoria" color="blue" client:load/>
                    </div>
                </NavLink>
            </div>
        </div>
    </nav>
</header>

<style>
    #toggle_nav:checked ~ div #hamburger #line {
        @apply translate-y-1.5 rotate-45;
    }

    #toggle_nav:checked ~ div #hamburger #line2 {
        @apply -translate-y-1 -rotate-45;
    }

    .toggled div:first-child {
        @apply translate-y-1.5 rotate-45;
    }
    .toggled div:last-child {
        @apply -translate-y-1 -rotate-45;
    }
</style>
